name: build-images

on:
  push:
    branches: [ develop, master ]
    paths:
      - 'frontend/**'
      - 'users-api/**'
      - 'todos-api/**'
      - 'auth-api/**'
      - 'log-message-processor/**'
      - '.github/workflows/build-images.yml'
  pull_request:
    branches: [ develop ]
    paths:
      - 'frontend/**'
      - 'users-api/**'
      - 'todos-api/**'
      - 'auth-api/**'
      - 'log-message-processor/**'
      - '.github/workflows/build-images.yml'

concurrency:
  group: build-images-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        include:
          - name: frontend
            context: frontend
          - name: users-api
            context: users-api
          - name: todos-api
            context: todos-api
          - name: auth-api
            context: auth-api
          - name: log-message-processor
            context: log-message-processor

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true
          cleanup: true

      - name: GHCR login (para bases públicas)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker Hub login (para push de tus imágenes)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:dev-${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.name }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

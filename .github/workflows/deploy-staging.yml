name: deploy-staging
on:
  push:
    branches: [ develop, 'release/**' ]
    paths:
      - 'ops/**'
      - '.github/workflows/deploy-staging.yml'
      - 'frontend/**'
      - 'users-api/**'
      - 'auth-api/**'
      - 'todos-api/**'
      - 'log-message-processor/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging   # usa los Environment secrets de “staging”
    steps:
      - uses: actions/checkout@v4

      # 1) Prueba de conectividad SSH 
      - name: Test SSH connectivity
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "✅ SSH OK en $(hostname)"; uname -a

      # 2) Asegura carpeta destino en la VM
      - name: Ensure remote dir
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            APP_DIR=/opt/microservice-app-stg
            sudo mkdir -p $APP_DIR
            sudo chown $USER:$USER $APP_DIR
            echo "APP_DIR=$APP_DIR" > /tmp/appdir.txt

      # 3) Copia archivos 
      - name: Copy compose files to remote
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "ops/compose/.env,ops/compose/docker-compose.stg.yml,ops/compose/nginx.conf"
          target: "/opt/microservice-app-stg"
          strip_components: 2
          overwrite: true

      # 4) Levanta con docker compose (pull + up -d)
      - name: Pull & Up (staging)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e
            APP_DIR=/opt/microservice-app-stg
            cd $APP_DIR

            # Opcional: verifica docker y compose
            docker --version || (echo "Docker no está instalado"; exit 1)
            docker compose version || (echo "Compose plugin no está instalado"; exit 1)

            # Renombra el compose de staging a docker-compose.yml
            mv -f docker-compose.stg.yml docker-compose.yml

            # Pull y up
            sudo docker compose pull
            sudo docker compose up -d --remove-orphans

            sudo docker compose ps

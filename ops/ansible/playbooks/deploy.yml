---
- name: Despliegue microservice-app (staging/prod auto)
  hosts: all
  become: true

  vars:
    # Directorio remoto donde quedará la app
    app_dir: "{{ '/opt/microservice-app-stg' if 'staging' in group_names else '/opt/microservice-app' }}"
    # Compose que se copia según el grupo del host
    compose_file: "{{ 'docker-compose.stg.yml' if 'staging' in group_names else 'docker-compose.prod.yml' }}"
    # Carpeta local desde donde copiamos los archivos
    compose_src_dir: "{{ playbook_dir }}/../../compose"

  tasks:
    # ---------- Prerrequisitos de Docker ----------
    - name: Paquetes base
      ansible.builtin.apt:
        name: [ 'ca-certificates', 'curl', 'gnupg', 'python3' ]
        state: present
        update_cache: yes

    - name: Crear carpeta de keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Descargar llave GPG de Docker (ASCII)
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
        force: true

    - name: Convertir llave a formato gpg (dearmor)
      ansible.builtin.command: >
        gpg --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker.asc
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Agregar repo de Docker (deb822)
      ansible.builtin.deb822_repository:
        name: docker
        types: [deb]
        uris: https://download.docker.com/linux/ubuntu
        suites: "{{ ansible_distribution_release }}"
        components: [stable]
        signed_by: /etc/apt/keyrings/docker.gpg
        state: present

    - name: Actualizar cache APT
      ansible.builtin.apt:
        update_cache: yes

    - name: Instalar Docker Engine, Buildx y Compose
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Agregar usuario ubuntu al grupo docker
      ansible.builtin.user:
        name: ubuntu
        groups: docker
        append: yes

    # ---------- Despliegue de la app ----------
    - name: INFO | Host en grupos / paths seleccionados
      ansible.builtin.debug:
        msg: "group_names={{ group_names }} | app_dir={{ app_dir }} | compose={{ compose_file }}"

    - name: Crear directorio de la app
      ansible.builtin.file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'

    - name: Subir .env (desde el repo)
      ansible.builtin.copy:
        src: "{{ compose_src_dir }}/.env"
        dest: "{{ app_dir }}/.env"
        mode: '0640'

    - name: Copiar docker-compose según entorno (stg/prod)
      ansible.builtin.copy:
        src: "{{ compose_src_dir }}/{{ compose_file }}"
        dest: "{{ app_dir }}/{{ compose_file }}"
        mode: '0644'

    - name: Copiar nginx.conf
      ansible.builtin.copy:
        src: "{{ compose_src_dir }}/nginx.conf"
        dest: "{{ app_dir }}/nginx.conf"
        mode: '0644'

    - name: Levantar stack con Docker Compose v2 (pull+up)
      community.docker.docker_compose_v2:
        project_src: "{{ app_dir }}"
        files:
          - "{{ compose_file }}"
        pull: always
        state: present
        remove_orphans: true

    - name: Smoke GET / (HTTP 200)
      ansible.builtin.uri:
        url: "http://localhost/"
        return_content: no
        status_code: 200
      register: smoke_root
      failed_when: smoke_root.status != 200
